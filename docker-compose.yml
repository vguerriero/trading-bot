# docker-compose.yml
services:
  # ---------- Data Layer ----------
  feature_store:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file: .env.compose
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"

  # ---------- Monitoring ----------
  prometheus:
    image: prom/prometheus:v2.52.0
    network_mode: host
    restart: unless-stopped
    volumes:
      - ./ops/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:11.0.0
    network_mode: host
    restart: unless-stopped
    env_file: .env.compose
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=changeme
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana

  # ---------- Host Metrics Exporter ----------
  node_exporter:
    image: prom/node-exporter:v1.8.1
    network_mode: host
    pid: host
    restart: unless-stopped

  # ---------- Docker-container Metrics ----------
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.52.1
    network_mode: host
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  # ---------- Ingestor skeleton ----------
  ingestor:
    build:
      context: .
      dockerfile: Dockerfile
    command:
      - "python"
      - "-u"
      - "-m"
      - "ingest.dummy"
    depends_on:
      - feature_store
      - redis
    env_file: .env.compose

volumes:
  pg_data:
  grafana_data:
